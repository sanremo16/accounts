spring:
    jpa:
        generate-ddl: true
        database: h2
        show-sql: true
        defer-datasource-initialization: true
        hibernate:
            ddl-auto: create-drop
    datasource:
        name: accounts
        url: jdbc:h2:mem:mydb;DB_CLOSE_ON_EXIT=FALSE;MODE=PostgreSQL;INIT=CREATE SCHEMA IF NOT EXISTS accounts
        initialization-mode: always
    h2:
        console:
            enabled: true
            path: /console
    application:
        name: accounts
    sql:
        init:
            data-locations: classpath:/sql/data.sql
            mode: always
    mvc:
        pathmatch:
            matching-strategy: ANT_PATH_MATCHER
server:
    port: 8082
management:
    endpoints:
        web:
            exposure:
                include: prometheus,health,info,metrics
    security:
        enabled=false
    endpoint:
        health:
            show-details: always
    #web:
    #    server:
    #        request:
    #            autotime:
    #                percentiles: 0.9, 0.95
    #                metric-name: http.server.requests
    metrics:
        distribution:
            percentiles:
                "[http.server.requests]": 0.9, 0.95
            #percentiles-histogram:
                #"[http.server.requests]": true
springdoc:
    show-actuator: false
    packages-to-scan: org.san.home.accounts.controller
    pathsToMatch: /accounts/**
